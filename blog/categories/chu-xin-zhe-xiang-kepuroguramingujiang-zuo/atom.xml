<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 初心者向けプログラミング講座 | alphakai.github.io]]></title>
  <link href="http://alphaKAI.github.io/blog/categories/chu-xin-zhe-xiang-kepuroguramingujiang-zuo/atom.xml" rel="self"/>
  <link href="http://alphaKAI.github.io/"/>
  <updated>2014-09-24T00:21:24+09:00</updated>
  <id>http://alphaKAI.github.io/</id>
  <author>
    <name><![CDATA[alphaKAI]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[01-Intro-AboutProgramming]]></title>
    <link href="http://alphaKAI.github.io/blog/2014/09/23/01-intro-aboutprogramming/"/>
    <updated>2014-09-23T23:51:05+09:00</updated>
    <id>http://alphaKAI.github.io/blog/2014/09/23/01-intro-aboutprogramming</id>
    <content type="html"><![CDATA[<p>えーっと、とりあえずなんとなく<br/>
プログラミングを独学しようとする初心者の方に少しでも貢献できればなあ<br/>
なんて思って、僕なりにプログラミング講座的なものをしてみようと思ってはじめてみました<br/>
今回は、まずプログラミングとはなにか ということをかこうかなあと<br/>
まあ、プログラミングに興味を持ってる方が対象なので書く必要があんまりない(?)かもしれないですけど<br/>
とりあえずここから</p>

<p>では、続きからどうぞ</p>

<!--more-->


<p>えーっと、本講座における注意点<br/>
- この講座では基本的にD言語(たまにRubyも使うかも)で解説します
- しかし、この講座では主にプログラミングの概念的な汎用的な考えを書いていく予定です
- したがって、言語機能を深くまで掘り下げたりとかはしませんのでDやRubyの知識が無い方でも大丈夫です
- 必要なのはやる気だけです！！！
- あ、ちなみに、これは僕なりの考え方なので他の人からすると考え方が異なるかもしれません
以上の点が注意点的な感じです<br/>
はい</p>

<p>では、早速はじめましょう</p>

<h3>そもそもプログラミングとはなにか</h3>

<p>簡単に言えば<br/>
自分で世界を作ること<br/>
みたいな感じなんですよ<br/>
スケールが大きい話ですけど</p>

<p>で、つまりは<br/>
コンピュータを使って自分のやりたいことを実現するための手段です<br/>
あー、実現するための手段という点を見ると<br/>
「そんなん、既にあるソフト使えばええやん」<br/>
まあ、実際そうなんですけど<br/>
ただ、それだと<br/>
痒いところに手が届かなかったり<br/>
難解な説明書を読みながら頑張って作業したりとか<br/>
最悪の場合、自分のやりたいことができなかったりします</p>

<p>でも、自分で作っちゃえば解決します！</p>

<p>無いなら作ればいい<br/>
あるけど、使いにくいから自分で作っちゃおう</p>

<p>これがプログラミングにおいて基本的な考え方だと思います</p>

<p>つまりは、自分で物を作るんです</p>

<p>自分がやりたいことを自分の力で実現出来る<br/>
なんて素晴らしいことでしょう<br/>
それに、その自分が作ったもので他の人が同じようなことが出来るようになるかもしれません<br/>
なんて素晴らしいことでしょう！！！</p>

<p>話がごちゃごちゃしてきたのでまとめると</p>

<p>プログラミングとは<br/>
自分がやりたいことをコンピュータを使って実現するための手段<br/>
です</p>

<h3>じゃあまず何をすればいいか</h3>

<p>簡単です<br/>
実際に手を動かしましょう<br/>
これが(多分)技術力がつくコツ的なものだと思います<br/>
というか、実際に経験を積まないと多分ダメです はい</p>

<p>じゃあまずどうすんのってことなので説明します</p>

<p>多分いろんな入門書に書いてあると思いますが</p>

<p>PCそのもの(CPU)は言葉っていうものを理解できません<br/>
さらには、数字さえ理解できません<br/>
じゃあどうなってるのか</p>

<p>はい、CPUは電気信号のON/OFFしかわかんないんですよ<br/>
+,-の組み合わせにしたがって処理する感じなんですよ</p>

<p>で、+,-を2進数(0と1だけ)で表したものがプログラムの実態なんですよ</p>

<p>でも、常識的に考えて0,1の羅列を人間が書くのは絶望的です<br/>
例えば100桁書くぐらいなら何とかなるかもしれないけど<br/>
それが1万桁とかそんな感じの膨大な数になったら不可能ですね<br/>
死んでしまします</p>

<p>だからどうするか<br/>
-&gt; プログラミング言語と言うものを使う</p>

<p>こういうわけなんですよ<br/>
で、こういう訳って言われても意味がわからないと思うので説明すると<br/>
プログラミング言語ってのは0,1の羅列は人間にはわかりにくすぎるので<br/>
人間がわかるように処理を記述するための言語って感じです<br/>
  つまり<br/>
010100010101010110101010(適当です)<br/>
  ってのと<br/>
1 + 1(さっきの0,1の羅列とは対応してませんが)<br/>
とでは、圧倒的に後者のほうがわかりやすいじゃないですか<br/>
そういうことなんですよ</p>

<p>でも！<br/>
ここで一つ問題が<br/>
人間は0,1の羅列が辛いけど
PCからしてみると0,1しかわからないっていう現象が発生するんですよ<br/>
だからどうするか<br/>
プログラミング言語で書かれたものを0,1の羅列に変換してやればいいんですよ<br/>
それもプログラムを使って</p>

<p>これが、コンパイラと言うものです(compiler)<br/>
  コンパイル(compile)がその変換することを指すのでコンパイラはコンパイルするソフトってことです</p>

<p>簡単な図にすると
1 + 1 -&gt; コンパイラ -&gt; 010100010101010110101010(適当です)<br/>
みたいな感じですね</p>

<p>ということなので<br/>
あんまり長くなるとアレなので<br/>
今回はここまで</p>

<p>次回はD言語のコンパイラを導入して実際にプログラミング言語に触れてみようと思います！<br/>
次回の予定は未定ですが多分この記事を書いてから数日以内には公開できるかなあと思います！(もしかしたらその日のうちに書くかも)</p>

<p>では、以上です</p>

<p>α改</p>
]]></content>
  </entry>
  
</feed>
